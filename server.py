#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –±–µ–∑ GUI –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è
"""

import asyncio
import logging
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from config import bot_config
from bot import bot

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÇ Railway Server - Telegram Bot –ú–æ–¥–µ—Ä–∞—Ü–∏—è –°–ö–í –°–ü–±")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not bot_config.BOT_TOKEN:
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False
    
    print(f"üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   BOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if bot_config.BOT_TOKEN else '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    print(f"   CHAT_ID: {bot_config.CHAT_ID or '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    print(f"   OpenAI: {'‚úÖ –í–∫–ª—é—á–µ–Ω' if bot_config.USE_OPENAI_ANALYSIS else '‚ùå –í—ã–∫–ª—é—á–µ–Ω'}")
    print()
    
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        bot.setup_logging()
        
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        await bot.initialize()
        
        print("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await bot.start()
        
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üîÑ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç... (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)")
        
        # –ñ–¥–µ–º –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        try:
            while bot.is_running:
                await asyncio.sleep(1)
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        
        print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        await bot.stop()
        print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–µ–∑ GUI
    success = asyncio.run(main())
    sys.exit(0 if success else 1)