#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –°–ö–í –°–ü–±

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python main.py              - –ó–∞–ø—É—Å–∫ —Å GUI
    python main.py --console    - –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
    python main.py --help       - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
"""

import sys
import argparse
import asyncio
import logging
import signal
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, str(Path(__file__).parent))

from config import bot_config
from bot import bot
# –£—Å–ª–æ–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç GUI —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
GUI_AVAILABLE = True
try:
    if os.getenv('RAILWAY_ENVIRONMENT') or os.getenv('DYNO') or os.getenv('HEROKU_APP_NAME'):
        # –í –æ–±–ª–∞—á–Ω–æ–π —Å—Ä–µ–¥–µ GUI –Ω–µ –Ω—É–∂–µ–Ω
        GUI_AVAILABLE = False
        ModerationGUI = None
    else:
        from gui import ModerationGUI
except ImportError:
    GUI_AVAILABLE = False
    ModerationGUI = None
    print("‚ö†Ô∏è GUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Railway –¥–µ–ø–ª–æ–π
def is_railway_deploy():
    return os.getenv('RAILWAY_ENVIRONMENT') is not None

def setup_railway_config():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Railway"""
    if is_railway_deploy():
        # Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç PORT
        port = os.getenv('PORT', '8000')
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±–ª–∞–∫–∞
        print(f"üöÇ –ó–∞–ø—É—Å–∫ –Ω–∞ Railway, –ø–æ—Ä—Ç: {port}")
        return True
    return False

def setup_signal_handlers():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    def signal_handler(signum, frame):
        print(f"\n–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        if bot.is_running:
            loop = asyncio.get_event_loop()
            loop.create_task(bot.stop())
        sys.exit(0)
    
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)

async def run_console_mode():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ"""
    try:
        print("ü§ñ Telegram Bot –ú–æ–¥–µ—Ä–∞—Ü–∏—è –°–ö–í –°–ü–±")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        if not bot_config.BOT_TOKEN:
            print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω BOT_TOKEN!")
            print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
            return False
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        bot.setup_logging()
        
        print("üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        print(f"   ‚Ä¢ Chat ID: {bot_config.CHAT_ID or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        print(f"   ‚Ä¢ Admin Chat ID: {bot_config.ADMIN_CHAT_ID or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        print(f"   ‚Ä¢ OpenAI –∞–Ω–∞–ª–∏–∑: {'–í–∫–ª—é—á–µ–Ω' if bot_config.USE_OPENAI_ANALYSIS else '–í—ã–∫–ª—é—á–µ–Ω'}")
        print(f"   ‚Ä¢ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ: {'–í–∫–ª—é—á–µ–Ω–æ' if bot_config.AUTO_DELETE_BANNED_WORDS else '–í—ã–∫–ª—é—á–µ–Ω–æ'}")
        print(f"   ‚Ä¢ –ê–≤—Ç–æ–±–∞–Ω: {'–í–∫–ª—é—á–µ–Ω' if bot_config.AUTO_BAN_ON_BANNED_WORDS else '–í—ã–∫–ª—é—á–µ–Ω'}")
        print()
        
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        await bot.initialize()
        
        print("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await bot.start()
        
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        print("=" * 50)
        
        # –ñ–¥–µ–º –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        try:
            while bot.is_running:
                await asyncio.sleep(1)
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        
        print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        await bot.stop()
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ: {e}")
        return False

def run_gui_mode():
    """–ó–∞–ø—É—Å–∫ —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"""
    if not GUI_AVAILABLE or ModerationGUI is None:
        print("‚ùå GUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —ç—Ç–æ–π —Å—Ä–µ–¥–µ")
        print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º...")
        return run_console_mode()
    
    try:
        print("üñ•Ô∏è –ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
        
        # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º GUI
        app = ModerationGUI()
        app.run()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ GUI: {e}")
        print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º...")
        return run_console_mode()

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    missing_packages = []
    
    try:
        import telegram
    except ImportError:
        missing_packages.append("python-telegram-bot")
    
    try:
        import aiohttp
    except ImportError:
        missing_packages.append("aiohttp")
    
    try:
        import tkinter
    except ImportError:
        missing_packages.append("tkinter (–æ–±—ã—á–Ω–æ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø–æ—Å—Ç–∞–≤–∫—É Python)")
    
    if missing_packages:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã:")
        for package in missing_packages:
            print(f"   ‚Ä¢ {package}")
        print("\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π:")
        print("pip install python-telegram-bot aiohttp")
        return False
    
    return True

def create_env_file_template():
    """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ .env —Ñ–∞–π–ª–∞"""
    env_template = """# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram-–±–æ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –°–ö–í –°–ü–±
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN=YOUR_BOT_TOKEN_HERE
CHAT_ID=YOUR_CHAT_ID_HERE
ADMIN_CHAT_ID=YOUR_ADMIN_CHAT_ID_HERE

# OpenAI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
OPENAI_MODEL=gpt-3.5-turbo

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
AUTO_DELETE_BANNED_WORDS=true
AUTO_BAN_ON_BANNED_WORDS=true
BAN_DURATION_MINUTES=60
WARNING_THRESHOLD=3

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ OpenAI
USE_OPENAI_ANALYSIS=true
OPENAI_ANALYSIS_THRESHOLD=0.7

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_TO_FILE=true
LOG_TO_CONSOLE=true
"""
    
    env_file = Path(".env.example")
    if not env_file.exists():
        try:
            with open(env_file, 'w', encoding='utf-8') as f:
                f.write(env_template)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {env_file}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω .env: {e}")

def load_env_file():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞"""
    env_file = Path(".env")
    if env_file.exists():
        try:
            with open(env_file, 'r', encoding='utf-8') as f:
                for line in f:
                    line = line.strip()
                    if line and not line.startswith('#') and '=' in line:
                        key, value = line.split('=', 1)
                        os.environ[key.strip()] = value.strip()
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ {env_file}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞: {e}")

def print_logo():
    """–í—ã–≤–æ–¥ –ª–æ–≥–æ—Ç–∏–ø–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logo = """
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë              Telegram Bot –ú–æ–¥–µ—Ä–∞—Ü–∏—è –°–ö–í –°–ü–±                  ‚ïë
‚ïë                                                              ‚ïë
‚ïë    üè¢ –û–û–û "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è "–í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ –°–ü–±"         ‚ïë
‚ïë    ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ—Ä–∞—Ü–∏—è —á–∞—Ç–∞ —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏     ‚ïë
‚ïë    üì± –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è, AI-–∞–Ω–∞–ª–∏–∑, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞                     ‚ïë
‚ïë                                                              ‚ïë
‚ïë    –í–µ—Ä—Å–∏—è: 1.0                                               ‚ïë
‚ïë    –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ: 2025, –ú–∞–π                                         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
"""
    print(logo)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = argparse.ArgumentParser(
        description="Telegram-–±–æ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –°–ö–í –°–ü–±",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python main.py                 –ó–∞–ø—É—Å–∫ —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
  python main.py --console       –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
  python main.py --check-deps    –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  python main.py --create-env    –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  
–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
  BOT_TOKEN                      –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
  CHAT_ID                        ID —á–∞—Ç–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
  ADMIN_CHAT_ID                  ID –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞
  OPENAI_API_KEY                 –ö–ª—é—á OpenAI API
  
–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ GUI –∏–ª–∏ .env —Ñ–∞–π–ª.
"""
    )
    
    parser.add_argument(
        '--console', 
        action='store_true',
        help='–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞ –±–µ–∑ GUI'
    )
    
    parser.add_argument(
        '--check-deps',
        action='store_true', 
        help='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π'
    )
    
    parser.add_argument(
        '--create-env',
        action='store_true',
        help='–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞'
    )
    
    parser.add_argument(
        '--version',
        action='version',
        version='Telegram Bot –ú–æ–¥–µ—Ä–∞—Ü–∏—è –°–ö–í –°–ü–± v1.0'
    )
    
    args = parser.parse_args()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
    print_logo()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if args.check_deps:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        if check_dependencies():
            print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        sys.exit(0)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ .env
    if args.create_env:
        create_env_file_template()
        sys.exit(0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not check_dependencies():
        sys.exit(1)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_env_file()
    create_env_file_template()  # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
    setup_signal_handlers()
    
    is_cloud = setup_railway_config()
    
    try:
        if args.console or is_cloud:
            # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –æ–±–ª–∞–∫–µ)
            print("üñ•Ô∏è –†–µ–∂–∏–º: –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π")
            success = asyncio.run(run_console_mode())
        else:
            # GUI —Ä–µ–∂–∏–º (—Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ)
            if GUI_AVAILABLE:
                print("üñºÔ∏è –†–µ–∂–∏–º: –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
                success = run_gui_mode()
            else:
                print("‚ö†Ô∏è GUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–ø—É—Å–∫ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ")
                success = asyncio.run(run_console_mode())
        
        if success:
            print("\n‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            sys.exit(0)
        else:
            print("\n‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)
            
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()